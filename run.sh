#!/bin/bash

# Function if error occured
function exit_error() {
    NAME="$1"
    LOG_NAME="$2"
    LOG_ERR_NAME="$3"
    OUTPUT="$4"

    # Write output.json
    echo '{
    "name": "'"$NAME"'",
    "files": ["'"$LOG_NAME"'","'"$LOG_ERR_NAME"'"],
    "tags": [{"ftype":"log"},{"ftype":"log"}],
    "files_created": ["'"$LOG_NAME"'","'"$LOG_ERR_NAME"'"],
    "files_modified": []
    }' > "$OUTPUT/output.json"

    exit 0
}

# Function to parse data files
function parse_file() {
    CONFIG="$1"
    EXT="$2"

    # Get number of files passed
    NUM_FILES=$( jq -r ".num_files | length" "$CONFIG")

    if [ $NUM_FILES -gt 0 ]; then
        for i in `seq 0 $((NUM_FILES-1))`
        do
            e=$( jq -r ".files"[$i] "$CONFIG" )

            # If this is the targeted file extension
            if [[ "$e" == *"$EXT" ]]; then
                echo "$e"
                return
            fi
        done
    fi

    echo ""
}

set -x

END="============================================="

INPUT="/mnt/input"
OUTPUT="/mnt/output"
RAW="/mnt/malwarelab"
BINARY="/mnt/binary"

CONFIG="$INPUT/input.json"
NAME=$( jq -r ".name" "$CONFIG" )

LOG_NAME="malwarelab-${NAME}.log.txt"
LOG_ERR_NAME="malwarelab-${NAME}.log_err.txt"
LOG="$OUTPUT/$LOG_NAME"
LOG_ERR="$OUTPUT/$LOG_ERR_NAME"

echo "Started: `date +%s`" > $LOG
echo "" > $LOG_ERR

echo "Running $NAME" >> $LOG

# Get number of files passed
NUM_FILES=$( jq -r ".num_files | length" "$CONFIG")

# Submit to nvmtrace
if [ "$NAME" = "Submit" ]; then
    # Get files
    SAMPLE_ZIP=$(parse_file "$CONFIG" ".zip")

    # Check input files
    if [ "$SAMPLE_ZIP" = "" ]; then
        echo "Error. Couldn't find input files." >> $LOG_ERR
        exit_error "$NAME" "$LOG_NAME" "$LOG_ERR_NAME" "$OUTPUT"
    fi

    # Get folder
    OLD_NAME=$( zipinfo -1 "$INPUT/$SAMPLE_ZIP" | head -1 | awk '{split($NF,a,"/");print a[1]}' )

    # Unzip zipped folder
    cd "$INPUT"
    unzip "$SAMPLE_ZIP" -d "$OUTPUT"
    cd "$OUTPUT"
    ls -l "$OLD_NAME"
    cd /app/

    cd /app/malwarelab/

    echo "Submitting samples" >> $LOG
    echo "Submitting samples" >> $LOG_ERR
    echo "Start Timestamp: `date +%s`" >> $LOG

    # Submit files
    python3 submit.py --folder "${OUTPUT}/${OLD_NAME}" >> $LOG 2>> $LOG_ERR

    echo "End Timestamp: `date +%s`" >> $LOG

    # Write output.json
    echo '{
    "name": "'"$NAME"'",
    "files": ["'"$LOG_NAME"'","'"$LOG_ERR_NAME"'"],
    "tags": [{"ftype":"log"},{"ftype":"log"}],
    "files_created": ["'"$LOG_NAME"'","'"$LOG_ERR_NAME"'"],
    "files_modified": []
}' > "$OUTPUT/output.json"
fi

echo "Finished: `date +%s`" >> $LOG
